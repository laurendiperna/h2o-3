# News for the h2oEnsemble package. #

h2oEnsemble 0.0.9 (In progress)
----------------
* TO DO: Remove a learner from the level-one matrix, Z, if the algorithm fails to run.
* TO DO: Add a check that CV folds produce training sets that have both pos/neg examples instead of a constant response col (in the case of imbalanced data)
* TO DO: Update the `runtime` list to include times for `cv` and `baselearning`.  These were dropped in version 0.0.5.
* TO DO: Added new function `h2o.recombine` which allows the user to easily re-fit the metalearner using a new metalearning algorithm.
* TO DO: Added new functions, `h2o.saveEnsemble` and `h2o.loadEnsemble`, for easy saving and loading of ensemble models to disk.
* Added `target_ratio_comm_to_comp` argument to the `h2o.deeplearning.wrapper` function.


h2oEnsemble 0.0.8 (2015-10-07)
----------------
* Added support for the `col_sample_rate` and `sample_rate` arguments in the GLM wrapper.


h2oEnsemble 0.0.7 (2015-10-04)
----------------
* Added backward compatibility for `h2o` package with the data frame class name with "H2OFrame".  Temporarily on master, the `h2o` package is using a data frame class with name "Frame" (Rapids integration).


h2oEnsemble 0.0.6 (2015-09-28)
----------------
* Add support for new distribution/family arg in `h2o.gbm` and `h2o.glm`.
* Made some adjustments to the internals of the `h2o.ensemble` function to become compatible with the "Rapids" integration in the `h2o` package.


h2oEnsemble 0.0.5 (2015-08-10)
----------------
* Added full support for `h2o.*` metalearning functions (data is no longer pulled into R). Previously, we pulled the `Z` matrix into R memory in order to be able to make use of SuperLearner-based metalearning functions, but this is no longer the default functionality.  We still pull the `Z` matrix into R memory if a SL-based metalearner is specified, however.  Using SL-based metalearners is suboptimal from a memory management perspective and may be deprecated in the future.  
* Re-wrote the backend of `h2o.ensemble` such the `Z` matrix of cv-pred values from the base learners to stay entirely within the H2O cluster using the recently updated cross-validation capabilities of the h2o base learner functions.
* Updated many of the wrapper functions to include newly implemented arguments.
* Updated bug in example code for `h2o.ensemble` that used predicted labels instead of predicted value for h2o metalearners.  This made it look like h2o metalearners were suboptimal when they were not.
* New distribution families (gamma, tweedie, poisson) are now supported when all base learners and metalearners can utilize the distribution (functionality currently untested).
* The example for the `h2o.ensemble` function was updated.


h2oEnsemble 0.0.4 (2015-06-15)
----------------
* Upgraded the `h2oEnsemble` package to be compatible with H2O 3.0.  Previous versions of this package are compatible with H2O 2.0 only.


h2oEnsemble 0.0.3 (2014-12-28)
----------------
* Fixed bug in `h2o.ensemble` that occurred when the number of observations is not divisible by the number of internal CV folds.


h2oEnsemble 0.0.2 (2014-11-17)
----------------
* Removed rounding in `h2o.ensemble.predict`.
* Updated ensemble base learner wrapper function defaults to match h2o defaults.
* Updated example in `h2o.ensemble` documentation.
* Fixed a bug in `h2o.ensemble` that occurs when the outcome variable has a generic R column name such as `V1`.
* Changed the default CV folds from V=10 to V=5.


h2oEnsemble 0.0.1 (2014-10-08)
----------------
* Initial release.
